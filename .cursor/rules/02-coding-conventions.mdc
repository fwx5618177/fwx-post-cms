---
description: 
globs: 
alwaysApply: false
---
# 编码规范

## TypeScript 规范
- 所有新代码都使用 TypeScript
- 启用 TypeScript 的严格模式
- 为 props、state 和函数参数定义明确的类型
- 使用 interface 定义对象类型
- 使用 type 定义联合类型和交叉类型

## React 组件规范
- 使用函数组件和 Hooks
- Props 接口命名为 `{ComponentName}Props`
- 每个组件放在独立的文件中
- 组件文件使用大驼峰命名（PascalCase）
- 使用命名导出组件

## 样式规范
- 使用 CSS Modules 编写组件特定样式
- 全局样式放在 `/src/styles` 目录
- 遵循 BEM 命名约定
- 使用 CSS 变量进行主题设置

## 文件组织
- 一个文件只包含一个组件
- 相关组件按功能分组放在目录中
- 组件和其测试文件放在一起
- 共享工具函数放在 `/src/utils`
- API 服务放在 `/src/services`

## 代码风格
- 遵循 [.eslintrc](mdc:.eslintrc) 中定义的 ESLint 规则
- 遵循 [.prettierrc](mdc:.prettierrc) 中定义的 Prettier 格式化规则
- 使用有意义的变量和函数名
- 为复杂逻辑编写注释
- 保持函数简短且功能单一
